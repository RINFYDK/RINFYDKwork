#!/usr/bin/env bash
#
# RDK MANAGEMENT, LLC CONFIDENTIAL AND PROPRIETARY
#
# This file (and its contents) are the intellectual property of RDK Management, LLC.
# It may not be used, copied, distributed or otherwise  disclosed in whole or in
# part without the express written permission of RDK Management, LLC.
#
# Copyright (c) 2014 RDK Management, LLC. All rights reserved.
#
# Authored-by: Jim Lawton, S3 Group Ltd., Sep 18 2014
#

TOP_DIR=$(pwd)

# Call the meta-rdk setup script.
source meta-cmf-raspberrypi-infosys/conf/meta-rdk-setup-environment $1

# Add meta-cmf-bsp-emulator ONLY if meta-rdk-bsp-emulator is included in the BBLAYERS.
if [ $(grep '^BBLAYERS' conf/bblayers.conf | grep -c 'meta-rdk-bsp-emulator') -eq 1 -a $(grep '^BBLAYERS' conf/bblayers.conf | grep -c 'meta-cmf-bsp-emulator') -eq 0 ]; then
    cat >> conf/bblayers.conf <<EOF
BBLAYERS =+ "\${RDKROOT}/meta-cmf-bsp-emulator"
EOF
fi

# Add meta-cmf-qt5 only if not already present.
if [ $(grep '^BBLAYERS' conf/bblayers.conf | grep -c 'meta-cmf-qt5') -eq 0 ]; then
    cat >> conf/bblayers.conf <<EOF
BBLAYERS =+ "\${RDKROOT}/meta-cmf-qt5"
EOF
fi

# Add meta-cmf only if not already present.
if [ $(grep '^BBLAYERS' conf/bblayers.conf | grep -c 'meta-cmf[^-]') -eq 0 ]; then
    cat >> conf/bblayers.conf <<EOF
BBLAYERS =+ "\${RDKROOT}/meta-cmf"
EOF
fi

BUILD_DIR=$(pwd)

# Generate externalsrc auto.conf.
cd ..
python meta-cmf/gen-autoconf.py "${RDK_BSP_LAYER}"
if [ $? -ne 0 ]; then
    return
fi
cd ${BUILD_DIR}

# Needed for external_src build.
export RDK_ROOT_PATH=$(cd .. ; pwd)
export BB_ENV_EXTRAWHITE="${BB_ENV_EXTRAWHITE} RDK_ROOT_PATH"

# TEMPORARY HACK: patch opensource layers.
PATCH_DIR=../patches/rdk-oe

components=$(ls -d ${PATCH_DIR}/*/ | sed 's:../patches/rdk-oe/::')
for component in ${components}; do
    cd ../${component}/
    git checkout -- .
    git clean -qdf .
    for patchfile in ${PATCH_DIR}/${component}/*.patch; do
        patch -s -Np1 < $patchfile
    done
done
# END TEMPORARY HACK: patch opensource layers.

cd ${BUILD_DIR}

# Create symlink to generated externalsrc auto.conf.
rm -f conf/auto.conf
ln -s ${TOP_DIR}/auto.conf conf/auto.conf

